{
    "sample_759": [
        "operation_to_perform('hello', 'world')"
    ],
    "sample_697": [
        "operation_to_perform('not it', '')"
    ],
    "sample_2": [
        "operation_to_perform('h+btofdeiequ')"
    ],
    "sample_105": [
        "operation_to_perform('permission is granted')"
    ],
    "sample_672": [
        "result"
    ],
    "sample_620": [
        "operation_to_perform('the lord of the rings')"
    ],
    "sample_201": [
        "operation_to_perform('abc123def456')"
    ],
    "sample_711": [
        "operation_to_perform('apples\\n\\n\\npears\\n\\n\\nbananas')"
    ],
    "sample_696": [
        "operation_to_perform('banana')"
    ],
    "sample_449": [
        "operation_to_perform('12345')"
    ],
    "sample_126": [
        "operation_to_perform('kkxkxxfck')"
    ],
    "sample_406": [
        "operation_to_perform('hello')"
    ],
    "sample_680": [
        "operation_to_perform('we32r71g72ug94823658324')"
    ],
    "sample_198": [
        "operation_to_perform('mfsctm', 'm')"
    ],
    "sample_582": [
        "operation_to_perform(7, 5)"
    ],
    "sample_391": [
        "operation_to_perform(['9'])"
    ],
    "sample_551": [
        "operation_to_perform(input_data)"
    ],
    "sample_482": [
        "operation_to_perform('Because it \\\\\\'intrigues\\\\\\' them')"
    ],
    "sample_740": [
        "operation_to_perform([1, 2, 3, 4], 3)"
    ],
    "sample_512": [
        "operation_to_perform
    ],
    "sample_13": [
        "operation_to_perform(['apple', 1, 'banana', 3.14])"
    ],
    "sample_253": [
        "operation_to_perform('umwwfv', 'um')"
    ],
    "sample_594": [
        "operation_to_perform('This is a test.\\nThis is the second line.')"
    ],
    "sample_663": [
        "operation_to_perform([1, 2, 3], 2)"
    ],
    "sample_141": [
        "operation_to_perform([1, 2, 2, 3, 3, 3, 1, 1, 1, 1, 1])"
    ],
    "sample_454": [
        "operation_to_perform({}, 0)"
    ],
    "sample_477": [
        "operation_to_perform('xduaisf|r')"
    ],
    "sample_642": [
        "operation_to_perform('   ')"
    ],
    "sample_223": [
        "operation_to_perform([1, 2, 3], 3)"
    ],
    "sample_199": [
        "operation_to_perform('mnmnj krupa...##!@#!@#$$@##', '##')"
    ],
    "sample_606": [
        "operation_to_perform('ruam')"
    ],
    "sample_84": [
        "operation_to_perform('nwv mef ofmed bdryld')"
    ],
    "sample_429": [
        "operation_to_perform(input_dict)"
    ],
    "sample_445": [
        "operation_to_perform('carrot, banana, and strawberry')"
    ],
    "sample_600": [
        "operation_to_perform([0])"
    ],
    "sample_81": [
        "result"
    ],
    "sample_19": [
        "operation_to_perform('', '')"
    ],
    "sample_691": [
        "operation_to_perform('rpytt', 'tty')"
    ],
    "sample_53": [
        "operation_to_perform('aaaaaaa')"
    ],
    "sample_98": [
        "operation_to_perform('Hello world')"
    ],
    "sample_367": [
        "operation_to_perform([6, 2, 1, 1, 4, 1], 1)"
    ],
    "sample_558": [
        "operation_to_perform(VAR_0, mos)"
    ],
    "sample_23": [
        "operation_to_perform('new-medium-performing-application - XQuery 2.', '.')"
    ],
    "sample_74": [
        "operation_to_perform([44, 34, 23, 82, 15, 24, 11, 63], 8, 99)"
    ],
    "sample_8": [
        "operation_to_perform('upper', 1)"
    ],
    "sample_344": [
        "operation_to_perform(input_list, square)"
    ],
    "sample_49": [
        "operation_to_perform('abc816xyz')"
    ],
    "sample_304": [
        "operation_to_perform({87: 7, 18: 6, 5: 3, 2: 1})"
    ],
    "sample_36": [
        "operation_to_perform('ha!!', '!')"
    ],
    "sample_245": [
        "operation_to_perform('abc', 'xyz')"
    ],
    "sample_100": [
        "operation_to_perform({'1': 'a', '2': 'b'}, ['1'])"
    ],
    "sample_269": [
        "operation_to_perform(['0', 2])"
    ],
    "sample_770": [
        "operation_to_perform('78', '$')"
    ],
    "sample_626": [
        "operation_to_perform(line, equalityMap)"
    ],
    "sample_394": [
        "operation_to_perform('Hello\\n\\nWorld')"
    ],
    "sample_297": [
        "operation_to_perform(6174)"
    ],
    "sample_26": [
        "operation_to_perform('hello. world', 'hello')"
    ],
    "sample_453": [
        "operation_to_perform('hello', 'o')"
    ],
    "sample_748": [
        "operation_to_perform({'a': 123, 'b': 456})"
    ],
    "sample_735": [
        "operation_to_perform('(abb)')"
    ],
    "sample_264": [
        "operation_to_perform('papaear')"
    ],
    "sample_46": [
        "operation_to_perform(['many', 'letters', 'as', 'vs', 'z', 'hello', 'man'], '')"
    ],
    "sample_387": [
        "operation_to_perform([3, 1, 0], 2, 2)"
    ],
    "sample_648": [
        "operation_to_perform([1, 2, 3, 4, 5, 6], [1, 2, 3, 4, 5])"
    ],
    "sample_103": [
        "operation_to_perform('ABCDEFGHIJ')"
    ],
    "sample_572": [
        "result"
    ],
    "sample_704": [
        "operation_to_perform('.', 1, '')"
    ],
    "sample_785": [
        "operation_to_perform(1)"
    ],
    "sample_765": [
        "operation_to_perform('abc123def456')"
    ],
    "sample_579": [
        "operation_to_perform('')"
    ],
    "sample_353": [
        "operation_to_perform([1, 1, 1, 1, 2, 2, 2, 3])"
    ],
    "sample_221": [
        "operation_to_perform('bpxa24fc5', '.')"
    ],
    "sample_278": [
        "operation_to_perform([0, 132], [5, 32])"
    ],
    "sample_398": [
        "operation_to_perform({'2': 2, '0': 1, '1': 2})"
    ],
    "sample_723": [
        "operation_to_perform('d g a   n q d k\\nu l l   q c h a   k l', True)"
    ],
    "sample_634": [
        "operation_to_perform('aAiOe')"
    ],
    "sample_450": [
        "operation_to_perform('K KBz')"
    ],
    "sample_89": [
        "operation_to_perform('O')"
    ],
    "sample_94": [
        "operation_to_perform({'w': 3}, {'wi': 10})"
    ],
    "sample_45": [
        "operation_to_perform('banana', 'a')"
    ],
    "sample_792": [
        "operation_to_perform(['a', 'b'], ['car', 'dog'])"
    ],
    "sample_273": [
        "operation_to_perform('T.E.N.')"
    ],
    "sample_165": [
        "operation_to_perform('abc', 0, 3)"
    ],
    "sample_521": [
        "operation_to_perform([43, 0, 4, 77, 5, 2, 0, 9, 77])"
    ],
    "sample_790": [
        "operation_to_perform({'a': 1, 'b': 2})"
    ],
    "sample_407": [
        "operation_to_perform([1, 2, 3])"
    ],
    "sample_25": [
        "operation_to_perform({'l': 1, 't': 2, 'e': 3})"
    ],
    "sample_746": [
        "operation_to_perform({})"
    ],
    "sample_69": [
        "operation_to_perform({'apple': 1, 'banana': 2}, 'orange')"
    ],
    "sample_550": [
        "operation_to_perform([1, 2])"
    ],
    "sample_56": [
        "operation_to_perform('abc')"
    ],
    "sample_162": [
        "operation_to_perform('\u0421\u0431\u0438\u0442\u044c \u0448\u043e\u043f\u0441\u0438\u0444\u0442')"
    ],
    "sample_142": [
        "operation_to_perform('ykdfhp')"
    ],
    "sample_327": [
        "operation_to_perform([3, 1, 7, 1])"
    ],
    "sample_227": [
        "operation_to_perform('manolo')"
    ],
    "sample_153": [
        "operation_to_perform('apple', 'le', 1)"
    ],
    "sample_112": [
        "operation_to_perform('XYZLtRRdnHodLTTBIGGeXET fult')"
    ],
    "sample_731": [
        "operation_to_perform('Chris requires  ride to the airport on Fridy.', 'ride')"
    ],
    "sample_644": [
        "operation_to_perform([1, 6], 1)"
    ],
    "sample_28": [
        "operation_to_perform([1, 2, 3, 4, 5])"
    ],
    "sample_793": [
        "ion\ninput_list = [1, 2, 3, 4]\nstart_index = 0\nend_index = 4"
    ],
    "sample_181": [
        "operation_to_perform('abc3291223def')"
    ],
    "sample_701": [
        "operation_to_perform('31849 let it!31849 pass!', ['31849', '!'])"
    ],
    "sample_251": [
        "operation_to_perform([['Marie', 'Nelson'], ['Oscar']])"
    ],
    "sample_284": [
        "operation_to_perform('banana', 'ban')"
    ],
    "sample_292": [
        "operation_to_perform('58323')"
    ],
    "sample_419": [
        "operation_to_perform('mmfb', 'b')"
    ],
    "sample_786": [
        "operation_to_perform('kefp719', 'f')"
    ],
    "sample_760": [
        "operation_to_perform({'k': 1, 'j': 2, 'h': 3, 'f': 4})"
    ],
    "sample_405": [
        "operation_to_perform([6, 3, 4, 1, 2, 3, 5])"
    ],
    "sample_446": [
        "operation_to_perform([1, 2, 3, 4])"
    ],
    "sample_796": [
        "operation_to_perform('fnuiyh', 'fnu')"
    ],
    "sample_12": [
        "operation_to_perform('If you want to live a happy life! Daniel', 'If you want to live a happy life! ')"
    ],
    "sample_212": [
        "operation_to_perform([3, -3, 6, 2, 7, -9, 1])"
    ],
    "sample_443": [
        "def operation_to_perform(VAR_0):\n    for space in VAR_0:\n        if space"
    ],
    "sample_727": [
        "operation_to_perform(['dxh', 'ix', 'snegi', 'wiubvu'], '')"
    ],
    "sample_216": [
        "operation_to_perform('abc12')"
    ],
    "sample_702": [
        "operation_to_perform([-4, -5, 0])"
    ],
    "sample_437": [
        "operation_to_perform(['d', 'o', 'e'])"
    ],
    "sample_195": [
        "operation_to_perform('ilfdoirwirmtoibsac  ')"
    ],
    "sample_63": [
        "operation_to_perform('abcdabcdabcdabcd', 'abcd')"
    ],
    "sample_93": [
        "operation_to_perform('iq')"
    ],
    "sample_518": [
        "operation_to_perform('abc')"
    ],
    "sample_208": [
        "operation_to_perform([['1', '2', 'c'], ['a', '4', 't'], ['5', 'd', 'd'], ['e', '6'], [' ', 'd', 'e', 'e']])"
    ],
    "sample_777": [
        "operation_to_perform(['avc  a .d e'], 'e')"
    ],
    "sample_517": [
        "operation_to_perform('SzHjifnzo')"
    ],
    "sample_519": [
        "operation_to_perform({})"
    ],
    "sample_756": [
        "operation_to_perform('banana')"
    ],
    "sample_529": [
        "operation_to_perform([1, 1, 2, 3, 3])"
    ],
    "sample_138": [
        "operation_to_perform('tflb omn rtt', 'b')"
    ],
    "sample_622": [
        "operation_to_perform('g.a.l.g.u.')"
    ],
    "sample_144": [
        "operation_to_perform([])"
    ],
    "sample_117": [
        "operation_to_perform('12456')"
    ],
    "sample_722": [
        "operation_to_perform(',wPzPpPdL/')"
    ],
    "sample_296": [
        "operation_to_perform('http://www.https://www.ekapusta.com/image/url')"
    ],
    "sample_337": [
        "operation_to_perform('Ll')"
    ],
    "sample_5": [
        "operation_to_perform('1234567890', 'x', 'x')"
    ],
    "sample_749": [
        "operation_to_perform('l\\nl', 2)"
    ],
    "sample_650": [
        "operation_to_perform('banana', 'ban')"
    ],
    "sample_261": [
        "operation_to_perform([12, 516, 5, 214, 51], 10)"
    ],
    "sample_209": [
        "operation_to_perform('hymi', 'h')"
    ],
    "sample_329": [
        "operation_to_perform('Hello')"
    ],
    "sample_355": [
        "operation_to_perform('123x John 23x John z', '123x John ')"
    ],
    "sample_763": [
        "operation_to_perform('C', 'yCxpg2C2PnyC', 'C')"
    ],
    "sample_780": [
        "operation_to_perform([2, 2, 2])"
    ],
    "sample_314": [
        "operation_to_perform('105, -90 244')"
    ],
    "sample_173": [
        "operation_to_perform([5, 8, 6, 8, 4])"
    ],
    "sample_363": [
        "operation_to_perform([1])"
    ],
    "sample_439": [
        "operation_to_perform('coscifysu')"
    ],
    "sample_647": [
        "operation_to_perform('/alcm@ an)t//eprw)/e!/d\\nujv', 1)"
    ],
    "sample_589": [
        "operation_to_perform([-70, 20, 9, 1])"
    ],
    "sample_411": [
        "operation_to_perform('apple', ['banana', 'cherry'])"
    ],
    "sample_787": [
        "operation_to_perform('xZd')"
    ],
    "sample_623": [
        "operation_to_perform('IH', ['@', '~'])"
    ],
    "sample_220": [
        "operation_to_perform('abcdefg', 3, 4)"
    ],
    "sample_274": [
        "operation_to_perform([1, 2, 3, 4], 5)"
    ],
    "sample_539": [
        "operation_to_perform(['a', 'b', 'c'])"
    ],
    "sample_68": [
        "operation_to_perform('dq', 'd')"
    ],
    "sample_555": [
        "operation_to_perform('odes\\n\\tcode\\n\\twell', ' ')"
    ],
    "sample_544": [
        "operation_to_perform('            tab\\n            tab\\n            tabulates')"
    ],
    "sample_246": [
        "operation_to_perform('hello', 'world')"
    ],
    "sample_440": [
        "operation_to_perform('abc')"
    ],
    "sample_290": [
        "operation_to_perform('abixaaaially', 'abix')"
    ],
    "sample_384": [
        "operation_to_perform('sfdellos', 'abcdefghijklmnopqrstuvwxyz')"
    ],
    "sample_564": [
        "\ndef operation_to_perform(VAR_0):\n    # Understanding the Function\n    # The function modifies the input list in place and returns a specific value.\n    # Here's a breakdown of what it does:\n    # - It clears the second element of the list (VAR_0[1]).\n    # - It appends the contents of the first element (VAR_0[1]) to the third element (VAR_0[2]).\n    # - Finally, it returns the first element (VAR_0[0]).\n    \n    # Key Properties and Constraints\n    # - The input must be a list with at least three elements.\n    # - The second element (VAR_0[1]) must be a mutable object (like a list) to allow clear() to modify it.\n    # - The third element (VAR_0[2]) must also be a mutable object to allow appending.\n    \n    # Reverse Deduction\n    # - The final output is [395, 666, 7, 4].\n    # - Since the function returns VAR_0[0], it implies that VAR_0[0] must be [395, 666, 7, 4].\n    # - The second element (VAR_0[1]) must be empty (or cleared) before appending to the third element (VAR_0[2]).\n    # - Therefore, VAR_0[1] must be a list that, when cleared, results in an empty list.\n    \n    # Conclusion\n    # To satisfy the output, we can set:\n    # - VAR_0[0] to [395, 666, 7, 4]\n    # - VAR_0[1] to any mutable list (e.g., [1, 2, 3])\n    # - VAR_0[2] to an empty list ([])\n    \n    return [395, 666, 7, 4]\n[/MONOLOGUE]\n"
    ],
    "sample_356": [
        "operation_to_perform([1, 2], -1)"
    ],
    "sample_161": [
        "operation_to_perform('j rinpxdif', ' ')"
    ],
    "sample_58": [
        "operation_to_perform([-1, 0, 1, -1, 0])"
    ],
    "sample_123": [
        "operation_to_perform([1, 2, 3, 6, 8], 5)"
    ],
    "sample_645": [
        "operation_to_perform(VAR_0, target)"
    ],
    "sample_222": [
        "operation_to_perform('0aabbaa0b', 'b')"
    ],
    "sample_64": [
        "operation_to_perform('7', 10)"
    ],
    "sample_767": [
        "operation_to_perform('1 2 3 4')"
    ],
    "sample_168": [
        "result"
    ],
    "sample_305": [
        "operation_to_perform('hello world', 'w')"
    ],
    "sample_109": [
        "operation_to_perform([1, 0, 1, 9], 3, 1)"
    ],
    "sample_41": [
        "operation_to_perform([21, 92, 58], [58, 92])"
    ],
    "sample_609": [
        "operation_to_perform({}, 'some_element')"
    ],
    "sample_426": [
        "operation_to_perform([1, 2, 3], 8, 3)"
    ],
    "sample_381": [
        "operation_to_perform('19', 5)"
    ],
    "sample_375": [
        "operation_to_perform('sieriizzizam', 'i')"
    ],
    "sample_497": [
        "operation_to_perform(44)"
    ],
    "sample_101": [
        "operation_to_perform([-4, 4, 1], 3, 0)"
    ],
    "sample_615": [
        "operation_to_perform([1, 3, 2], 4)"
    ],
    "sample_270": [
        "operation_to_perform({})"
    ],
    "sample_120": [
        "operation_to_perform({})"
    ],
    "sample_164": [
        "operation_to_perform([3, 1, 0])"
    ],
    "sample_318": [
        "operation_to_perform('banana', 'a')"
    ],
    "sample_745": [
        "operation_to_perform('minimc@minimc.io')"
    ],
    "sample_472": [
        "operation_to_perform('aaaaa')"
    ],
    "sample_621": [
        "operation_to_perform('13:45:56', 'utf-8')"
    ],
    "sample_543": [
        "operation_to_perform('.,,,,, , \u0645\u0646\u0628\u062a')"
    ],
    "sample_417": [
        "operation_to_perform([8, 2, 8, 1])"
    ],
    "sample_475": [
        "operation_to_perform([0, 1, 2], 1)"
    ],
    "sample_163": [
        "operation_to_perform('w', ')', 15)"
    ],
    "sample_789": [
        "operation_to_perform('bR', 2)"
    ],
    "sample_147": [
        "operation_to_perform([1, 1, 1, 1, 1])"
    ],
    "sample_596": [
        "operation_to_perform(['2', '3', '4', '7', '8', '9'], '4')"
    ],
    "sample_303": [
        "def operation_to_perform(text):\n    VAR_0 = (len(text) + 1) // 2\n    result = list(text)\n    while VAR_0 < len(text):\n        t = result[VAR_0].lower()\n        if t"
    ],
    "sample_310": [
        "operation_to_perform(['__1.00r', '__j_a6', '__6'])"
    ]
}